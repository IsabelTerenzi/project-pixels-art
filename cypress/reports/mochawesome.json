{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-03-22T02:38:08.924Z",
    "end": "2022-03-22T02:39:29.494Z",
    "duration": 80570,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "160917ac-f365-4494-b4a5-465adec7d339",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0fc92948-4177-42b7-992c-e2ee16cc12a6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "8476c344-24fb-4fba-8462-f7fda8db55da",
              "parentUUID": "0fc92948-4177-42b7-992c-e2ee16cc12a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8476c344-24fb-4fba-8462-f7fda8db55da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "09740d2b-c9f7-4402-aaa9-9dc67a1df6ab",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "3ac8fd94-0783-4980-b494-e52775f5e52f",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8c9197ee-4cc4-4aea-a933-5c1da516b893",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "5c3c8be3-55fd-4df6-aac2-48345f8f9d1b",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1099b692-599e-478d-9b7f-3f9cf4dc4fee",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "9492f549-5087-4f45-9289-1ce55ebc0e01",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "73a6946a-4c64-4f73-ae60-da787b3fa974",
              "parentUUID": "9affaf1b-610a-4d2d-a8e0-3ceda3f70cce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09740d2b-c9f7-4402-aaa9-9dc67a1df6ab",
            "3ac8fd94-0783-4980-b494-e52775f5e52f",
            "8c9197ee-4cc4-4aea-a933-5c1da516b893",
            "5c3c8be3-55fd-4df6-aac2-48345f8f9d1b",
            "1099b692-599e-478d-9b7f-3f9cf4dc4fee",
            "9492f549-5087-4f45-9289-1ce55ebc0e01",
            "73a6946a-4c64-4f73-ae60-da787b3fa974"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d2e8a37-1a20-4d85-8cfd-124306de17dc",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b09783d2-a659-41ea-86d0-5761db59b4f5",
              "parentUUID": "4d2e8a37-1a20-4d85-8cfd-124306de17dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "2b21134c-e997-4e5a-abf2-899b87891402",
              "parentUUID": "4d2e8a37-1a20-4d85-8cfd-124306de17dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b09783d2-a659-41ea-86d0-5761db59b4f5",
            "2b21134c-e997-4e5a-abf2-899b87891402"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c3c0f8c-a909-4dd1-a8d0-9a3b5fb84354",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "add840b6-0299-4de8-bc70-6de36e098e1a",
              "parentUUID": "1c3c0f8c-a909-4dd1-a8d0-9a3b5fb84354",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "607a0494-de6e-41f7-bb11-16dba928fad7",
              "parentUUID": "1c3c0f8c-a909-4dd1-a8d0-9a3b5fb84354",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d7791849-622f-4c0a-9ad6-5ac9123dbd99",
              "parentUUID": "1c3c0f8c-a909-4dd1-a8d0-9a3b5fb84354",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a9a088eb-ed7e-4abc-9e12-44be8ec45c88",
              "parentUUID": "1c3c0f8c-a909-4dd1-a8d0-9a3b5fb84354",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "add840b6-0299-4de8-bc70-6de36e098e1a",
            "607a0494-de6e-41f7-bb11-16dba928fad7",
            "d7791849-622f-4c0a-9ad6-5ac9123dbd99",
            "a9a088eb-ed7e-4abc-9e12-44be8ec45c88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 493,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "614025a9-3a40-443c-adb2-596bab6c5d03",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a2fc888d-716c-4e32-a76b-316b2716f55e",
              "parentUUID": "614025a9-3a40-443c-adb2-596bab6c5d03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7441ded0-6aae-4745-a47e-76309b55d955",
              "parentUUID": "614025a9-3a40-443c-adb2-596bab6c5d03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2fc888d-716c-4e32-a76b-316b2716f55e",
            "7441ded0-6aae-4745-a47e-76309b55d955"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af1e2f8a-f71c-4e75-8b39-99cbcda6a006",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "763852a7-0c01-4410-9d78-e7fd15e47b95",
              "parentUUID": "af1e2f8a-f71c-4e75-8b39-99cbcda6a006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d061764c-fa0b-453d-a688-1fa18956b35a",
              "parentUUID": "af1e2f8a-f71c-4e75-8b39-99cbcda6a006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "763852a7-0c01-4410-9d78-e7fd15e47b95",
            "d061764c-fa0b-453d-a688-1fa18956b35a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4188281-33a3-49c0-8640-121f36459508",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "197a48a7-01bb-4c61-b91e-fc15f1caf7be",
              "parentUUID": "f4188281-33a3-49c0-8640-121f36459508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9f6c5dd1-af8d-46cd-9bb1-0b89ce1bc48d",
              "parentUUID": "f4188281-33a3-49c0-8640-121f36459508",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "197a48a7-01bb-4c61-b91e-fc15f1caf7be",
            "9f6c5dd1-af8d-46cd-9bb1-0b89ce1bc48d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5030ee0f-61d0-4240-946d-125bc8eb1948",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e0170cad-2e88-40ed-bb02-743f10fa802e",
              "parentUUID": "5030ee0f-61d0-4240-946d-125bc8eb1948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "abc0d990-b4b1-4a27-bfcf-84806731c356",
              "parentUUID": "5030ee0f-61d0-4240-946d-125bc8eb1948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d7de3b89-95ff-4f66-b0ca-edeb38cb89e4",
              "parentUUID": "5030ee0f-61d0-4240-946d-125bc8eb1948",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0170cad-2e88-40ed-bb02-743f10fa802e",
            "abc0d990-b4b1-4a27-bfcf-84806731c356",
            "d7de3b89-95ff-4f66-b0ca-edeb38cb89e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12434,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f09818a-06db-489e-a77d-d7cdd3c36304",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6c5fc30e-d68f-4698-9361-52ec13a28de0",
              "parentUUID": "0f09818a-06db-489e-a77d-d7cdd3c36304",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "59b9e598-8b3d-4b7c-b9fd-cc389efd6141",
              "parentUUID": "0f09818a-06db-489e-a77d-d7cdd3c36304",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "48f8f2f1-ad72-48a8-858c-6605a4abc974",
              "parentUUID": "0f09818a-06db-489e-a77d-d7cdd3c36304",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "1d026560-0042-497f-94fb-6e1523b7e867",
              "parentUUID": "0f09818a-06db-489e-a77d-d7cdd3c36304",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c5fc30e-d68f-4698-9361-52ec13a28de0",
            "59b9e598-8b3d-4b7c-b9fd-cc389efd6141",
            "48f8f2f1-ad72-48a8-858c-6605a4abc974",
            "1d026560-0042-497f-94fb-6e1523b7e867"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4272,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41a5f202-8ab8-4997-b194-12fac32f9d4a",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3a6bcec6-1ce7-47b4-b865-12063fc30ce7",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c13edeaf-2d96-4e47-b681-7c31d83d775c",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "869eed05-b593-48e3-8458-63eb85240704",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f74bb4d-1b6d-4821-a71a-2ae999ac1170",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "332b2a06-133d-4037-ad5d-6fd0b6686574",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4356,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b905a7ea-bac5-4231-b7e3-e0230bfca357",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "61705659-1653-4758-ac5d-162f7112daa3",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8dc5890a-8862-42d2-8e63-f4af467a4c92",
              "parentUUID": "d72202ed-6da5-4015-8c94-2f52eaf1bf4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "41a5f202-8ab8-4997-b194-12fac32f9d4a",
            "3a6bcec6-1ce7-47b4-b865-12063fc30ce7",
            "c13edeaf-2d96-4e47-b681-7c31d83d775c",
            "869eed05-b593-48e3-8458-63eb85240704",
            "9f74bb4d-1b6d-4821-a71a-2ae999ac1170",
            "332b2a06-133d-4037-ad5d-6fd0b6686574",
            "b905a7ea-bac5-4231-b7e3-e0230bfca357",
            "61705659-1653-4758-ac5d-162f7112daa3",
            "8dc5890a-8862-42d2-8e63-f4af467a4c92"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a5428371-d56b-49dc-960f-44638d14e721",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8927ad32-db70-4cd0-92d3-ba0b5ea58819",
              "parentUUID": "a5428371-d56b-49dc-960f-44638d14e721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9cff0b79-463a-4445-b5a8-84f38961fdf0",
              "parentUUID": "a5428371-d56b-49dc-960f-44638d14e721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41775/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41775/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41775/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41775/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41775/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41775/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ab458c68-6e7b-461e-9eb3-f161c7938ef5",
              "parentUUID": "a5428371-d56b-49dc-960f-44638d14e721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8927ad32-db70-4cd0-92d3-ba0b5ea58819",
            "9cff0b79-463a-4445-b5a8-84f38961fdf0",
            "ab458c68-6e7b-461e-9eb3-f161c7938ef5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13021,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "208da647-f3e5-41d5-8477-b7912222b96f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41775/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41775/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41775/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41775/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41775/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41775/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41775/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "916447eb-9d91-44b1-a829-0eb062952839",
              "parentUUID": "208da647-f3e5-41d5-8477-b7912222b96f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 305,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41775/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41775/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41775/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41775/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41775/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41775/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41775/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41775/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41775/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41775/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41775/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41775/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d34084a0-6880-4f08-8008-bb31748c8a9c",
              "parentUUID": "208da647-f3e5-41d5-8477-b7912222b96f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "916447eb-9d91-44b1-a829-0eb062952839",
            "d34084a0-6880-4f08-8008-bb31748c8a9c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 680,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}